"../deathforth/rooms/mall.txt" $load-rooms
"../deathforth/rooms/shop.txt" $add-rooms
"../deathforth/rooms/restroom.txt" $add-rooms

"events/inner/shoploc.df" $load	

	: mall-loot
		0 stack
			' gunshoploot shove
			' foodshoploot shove
			' umbrellashoploot shove
			' campingshoploot shove
			' jockshoploot shove
			' umbrellashoploot shove
			' skelscat shove
			' skelscat shove
			' skelscat shove
		shuffles pops execute drop
	;

: mallclosed
	n edge-inc n random-edge-door "shop" with-door empty
	n edge-inc n random-edge-door "shop" with-door empty
	n random-edge-door "shop" with-door
	random-door "restroom" only-with-door
;
: storage ;
: rest ;

0 value malldir
: randew rnd5050 if e else w then ;
: setup-mall 
	yall-theme
	randew to malldir	
;

: logansayings 1 6 rnd case
	1 of "NAE-NAE ON THE HATERS!" endof
	2 of "WHAT ARE THOOOOSEEE!!!" endof
	3 of "JOKE LOGANERS ARE THE STRONGEST ARMY OUT THERE!" endof
	4 of "I'M SELLIN' LIKE A GOD CHURCH!" endof
	5 of "ALWAYS PLUG MERCH IN LINK BIO!" endof
	6 of "WHITE BOY FROM OHIO THOUGH!" endof
endcase ;

: comptonsayings 1 4 rnd case
	1 of "CANADA'S MY HOME-TOWN!" endof
	2 of "CANADA'S MY ISLAND!" endof
	3 of "CANADA'S MY CITY!" endof
	4 of "CANADA'S MY PROVINCE!" endof
endcase ;

: loganersayings 1 7 rnd case
	1 of "GO JOKE LOGANERS!" endof
	2 of "NAE-NAE ON THE HATERS!!" endof
	3 of "GET NAE-NAE'D ON!!" endof
	4 of "WOOOOO!!" endof
	5 of "I LOVE YOU JOKE LOGAN!!" endof
	6 of "GOT SOLD MERCH LIKE A GOD CHURCH!!" endof
	7 of "FROM OHIO THOUGH!!" endof
endcase ;

: loganerlostsayings 1 4 rnd case
	1 of "LET'S FIND DICK CROMPTON!!" endof
	2 of "LET'S FIND THE TEAM!!" endof
	3 of "WHERE'S JOKE LOGAN?!?!" endof
	4 of "WHERE'S LOGAN? I NEED MERCH LIKE A GOD CHURCH!!" endof
endcase ;
		
: logansay args( me ) 1 nearest .character@ .party-familiar ($ RAINBOW .. logansayings $) <- me .sprayitfast clear-cyoa ;
: comptonsay args( me ) 1 nearest .character@ .party-familiar ($ RAINBOW .. comptonsayings $) <- me .sprayitfast clear-cyoa ;
: loganerlostsay args( me ) 1 nearest .character@ .party-familiar ($ RED .. loganerlostsayings $) <- me .sprayitfast clear-cyoa ;
: loganersay args( me ) 1 nearest .character@ .party-familiar loganersayings <- me .sprayitfast clear-cyoa ;

location
		tags: mall
		max-rooms: 7
		entry-tags: mall-open		
		
		2 value mallcountdown
		
		: mallopen
			' mallcountdown --
			mallcountdown 1 < if
				malldir random-edge-door "mall-closed" only-with-door
			then
			malldir random-edge-door "mall-open" only-with-door
			70 %chance if random-door "restroom" only-with-door then
		;
		
		: conventionsiegesetup
			map{ selected } . cr new-npc@ .jokelogan lt ' logansay cyoa! drop
			map{ selected } . cr new-npc@ .dickcompton lt ' comptonsay cyoa! drop
			6 for
				map{ selected } . cr new-npc@ .loganer lt ' loganersay cyoa! drop
			next
		;		
		
		: minisiegesetup
			2 for
				map{ selected } . cr new-npc@ .loganer lt ' loganerlostsay cyoa! drop
			next
			map{ selected } . cr new-npc@ .loganer lt ' loganersay cyoa! drop
		;		
		
		script: setup-mall
		post-script: 0 3 rnd for skelscat next
	
		room-choice: mall-open
			room-weight: 10
			room-count: 2
			room-script: nad
			room-post-script: mallopen minisiegesetup 5diff %zombs
			filter-only
			
		room-choice: mall-closed
			room-weight: 10
			room-count: 1
			room-script: ndx
			room-post-script: mallclosed conventionsiegesetup 10diff %zombs
			filter-only

		room-choice: shop
			room-weight: 10
			room-count: 1
			room-script: nad 
			room-post-script: gunshoploot
			filter-only
			
		room-choice: shop
			room-weight: 10
			room-count: 1
			room-script: nad 
			room-post-script: foodshoploot
			filter-only
			
		room-choice: shop
			room-weight: 10
			room-count: 1
			room-script: nad 
			room-post-script: umbrellashoploot
			filter-only		
			
		room-choice: shop
			room-weight: 10
			room-count: 1
			room-script: nad 
			room-post-script: campingshoploot
			filter-only	
			
		room-choice: shop
			room-weight: 10
			room-count: 1
			room-script: nad 
			room-post-script: jockshoploot
			filter-only	
			
		room-choice: shop
			room-weight: 10
			room-count: 1
			room-script: 
			room-post-script: bookshoploot
			filter-only	
						
		room-choice: restroom
			room-weight: 10
			room-count: 2
			room-script: nad floor-bath	
			room-post-script: 
			filter-only
			
regiondef{

	: siegesetup mission{ siege-start 150 bottom-spawn } ;

	 region: mall
		w: 26
		h: 30
		script: timeofday o'clock

		// no-prefab
		inside
		
		loc-choice: mall
			loc-weight: 99
			loc-count: 1

		post-script: siegesetup inspawn
}
