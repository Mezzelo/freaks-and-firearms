	: CHAD-oneline1 "My pa owns a lake, did you know that?" ;
	: CHAD-oneline2 "I wish I were camping with my friends." ;
	: CHAD-oneline3 "I used to be a counselor at summer camp." ;
	: CHAD-oneline4 "Race you all across the border!" ;
	: CHAD-oneline5 "Wow, I wish Tiffany were here with me." ;
	: CHAD-oneline6 "Kenny? Brandon? I'm better than all of them!" ;
	: CHAD-oneline7 "You should see my pa's house, it's huge!" ;

	deck-new
		card: CHAD-oneline1
		card: CHAD-oneline2
		card: CHAD-oneline3
		card: CHAD-oneline4
		card: CHAD-oneline5
		card: CHAD-oneline6
		card: CHAD-oneline7
	constant CHAD-ONELINERS
	CHAD-ONELINERS var chad-oneliners
	CHAD-ONELINERS shuffles to chad-oneliners

	: CHAD-emote1 " screams when a zombie gets close to him." ;
	: CHAD-emote2 " screams when he thinks he sees a hitchhiker." ;
	: CHAD-emote3 " sprays his hair over." ;
	: CHAD-emote4 " adjusts his draped sweater." ;
	: CHAD-emote5 " re-adjusts his expensive watch." ;

	deck-new
		card: CHAD-emote1
		card: CHAD-emote2
		card: CHAD-emote3
		card: CHAD-emote4
		card: CHAD-emote5
	constant CHAD-EMOTES
	CHAD-EMOTES var chad-emotes
	CHAD-EMOTES shuffles to chad-emotes	
	
: chad-oneliner
	chad-oneliners depths 0= if CHAD-ONELINERS shuffles to chad-oneliners then
	blurbslot 0= if
		drawcard blurbsay
	then
;

: chad-emote
	chad-emotes depths 0= if CHAD-EMOTES shuffles to chad-emotes then
	blurbslot 0= if
		qmsg ($ me .name@ .. chad-emotes drawcard $) txt
	then
;

	deck-new
	5 cards: chad-emote
	7 cards: chad-oneliner

	constant BLURB-CHAD-DECK
	BLURB-CHAD-DECK var blurb-chad-deck
	BLURB-CHAD-DECK shuffles to blurb-chad-deck
