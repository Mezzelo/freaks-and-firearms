	: PARDUE-oneline1 ($ "DRIVE FASTER, OR WE'LL LOSE THE " .. "TALLAHASSEE TERMINATOR!!!" fbold $) ;
	: PARDUE-oneline2 "The world is rough, but I was born with thick skin." ;
	: PARDUE-oneline3 ($ "Hurry, before we lose another victim to the " .. "TALLAHASSEE TERMINATOR!!!" fbold $) ;
	: PARDUE-oneline4 "All these zombies want is attention.  You know what I think of them?" ;
	
: pardue-annoy
	
	blurbslot 0= if 
		solo if 
			($ "Gotta hurry, or we'll lose the " .. "TALLAHASSEE TERMINATOR!" fbold $) blurbsay
		then;
		($ "Drive faster, or we'll lose the " .. "TALLAHASSEE TERMINATOR!" fbold $) blurbsay
	else
		blurbslot 2 < if
		2nd-char choosechar
			me .trait@ "Oblivious" $= if
				($ "Tallahasse Terminator?  Who's that?" $) blurbsay
				STAT_MORALE 1st-char .stat2-
			else
				ctemper+ not if
					($ "SHUT UP ALREADY!!" $) blurbsay
					STAT_MORALE 1st-char .stat2-
				else
					($ "I'm driving, I'm driving!" $) blurbsay
				then 
			then
		then
	then
;

: pardue-attention
	blurbslot 0= if 
		($ "The chief'll be on my ass for all the publicity this'll get!" $) blurbsay
	else
		blurbslot 2 < if
		2nd-char choosechar
			me .trait@ "Oblivious" $= if
				($ "Publicity for what?" $) blurbsay
				STAT_MORALE 1st-char .stat2-
			else
				cattitude+ not if
					($ "Nobody cares, shut up already!" $) blurbsay
					STAT_MORALE 1st-char .stat2-
				else
					($ "I'm sure you can handle it." $) blurbsay
					STAT_MORALE 1st-char .stat++
				then 
			then
		then
	then
;

: pardue-masked
	blurbslot 0= if 
		($ "I can't wait for us to apprehend the " .. "TALLAHASSEE TERMINATOR!!!" fbold $) blurbsay
	else
		blurbslot 2 < if
		2nd-char choosechar
			me .trait@ "Oblivious" $= if
				($ "Who's the Tallahassee Terminator?" $) blurbsay
				STAT_MORALE 1st-char .stat2-
			else
				ctemper+ not if
					($ "They're all dead already, just shut up!" $) blurbsay
					STAT_MORALE 1st-char .stat2-
				else
					($ "I'm sure you can handle it." $) blurbsay
					STAT_MORALE 1st-char .stat++
				then 
			then
		then
	then
;

	deck-new
		card: PARDUE-oneline1
		card: PARDUE-oneline2
		card: PARDUE-oneline3
		card: PARDUE-oneline4
	constant PARDUE-ONELINERS
	PARDUE-ONELINERS var pardue-oneliners
	PARDUE-ONELINERS shuffles to pardue-oneliners

	: PARDUE-emote1 " twirls his shotgun in the car, breaking everything around him." ;
	: PARDUE-emote2 " loads his shotgun again." ;
	: PARDUE-emote3 " practices his stomps, damaging the floor." ;
	: PARDUE-emote4 " scans the horizon for the TALLAHASSEE TERMINATOR." ;
	: PARDUE-emote5 " looks around nervously, for some reason." ;
	: PARDUE-emote6 " thumbs through his wallet." ;
	: PARDUE-emote7 " flips through a newspaper, reading about some homicides." ;
	: PARDUE-emote8 " smokes yet another cigarette, inside the car." ;
	: PARDUE-emote9 " tosses a shotgun shell between his hands." ;

	deck-new
		card: PARDUE-emote1
		card: PARDUE-emote2
		card: PARDUE-emote3
		card: PARDUE-emote4
		card: PARDUE-emote5
		card: PARDUE-emote6
		card: PARDUE-emote7
		card: PARDUE-emote8
		card: PARDUE-emote9
	constant PARDUE-EMOTES
	PARDUE-EMOTES var pardue-emotes
	PARDUE-EMOTES shuffles to pardue-emotes	
	
: pardue-oneliner
	pardue-oneliners depths 0= if PARDUE-ONELINERS shuffles to pardue-oneliners then
	blurbslot 0= if
		drawcard blurbsay
	then
;

: pardue-emote
	pardue-emotes depths 0= if PARDUE-EMOTES shuffles to pardue-emotes then
	blurbslot 0= if
		qmsg ($ me .name@ .. pardue-emotes drawcard $) txt
	then
;

	deck-new
	9 cards: pardue-emote
	4 cards: pardue-oneliner
	card: pardue-attention
	card: pardue-annoy
	card: pardue-masked

	constant BLURB-PARDUE-DECK
	BLURB-PARDUE-DECK var blurb-pardue-deck
	BLURB-PARDUE-DECK shuffles to blurb-pardue-deck
