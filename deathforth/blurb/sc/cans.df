	: CANS-emote1 " twirls a pistol around his finger." ;
	: CANS-emote2 " taps out a rhythm against his head." ;
	: CANS-emote3 " adjusts his cape." ;
	: CANS-emote4 " unloads and loads his pistols." ;
	: CANS-emote5 " starts flipping his coin inside the car." ;
	: CANS-emote6 " stares silently into the horizon." ;
	: CANS-emote7 " shoots a zombie as it passes by." ;

	deck-new
		card: CANS-emote1
		card: CANS-emote2
		card: CANS-emote3
		card: CANS-emote4
		card: CANS-emote5
		card: CANS-emote6
		card: CANS-emote7
	constant CANS-EMOTES
	CANS-EMOTES var cans-emotes
	CANS-EMOTES shuffles to cans-emotes	

: cans-emote
	cans-emotes depths 0= if CANS-EMOTES shuffles to cans-emotes then
	blurbslot 0= if
		qmsg ($ me .name@ .. cans-emotes drawcard $) txt
	then
;

	deck-new
	5 cards: ...say
	7 cards: cans-emote

	constant BLURB-CANS-DECK
	BLURB-CANS-DECK var blurb-cans-deck
	BLURB-CANS-DECK shuffles to blurb-cans-deck
