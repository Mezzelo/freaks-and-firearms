	: PYRO-oneline1 "Hudda hudda huh!" ;
	: PYRO-oneline2 "Mmph, mmmf mm mmmph!" ;
	: PYRO-oneline3 "Mmmphya harrgh mrgha hrghgph!" ;
	: PYRO-oneline4 "Mmmph mf mm mmph mmmmph." ;
	: PYRO-oneline5 "Mmmphya mrgha huh!" ;
	: PYRO-oneline6 "Mmmmpprrghh!" ;
	
	deck-new
		card: PYRO-oneline1
		card: PYRO-oneline2
		card: PYRO-oneline3
		card: PYRO-oneline4
		card: PYRO-oneline5
		card: PYRO-oneline6
	constant PYRO-ONELINERS
	PYRO-ONELINERS var pyro-oneliners
	PYRO-ONELINERS shuffles to pyro-oneliners

	: PYRO-emote1 " plays with a lighter." ;
	: PYRO-emote2 " cleans the blade on his fire-axe." ;
	: PYRO-emote3 " looks directly into the barrel of his shotgun." ;
	: PYRO-emote4 " stares out the window at passing zombies." ;
	: PYRO-emote5 " redoes the straps on his air tank." ;

	deck-new
		card: PYRO-emote1
		card: PYRO-emote2
		card: PYRO-emote3
		card: PYRO-emote4
		card: PYRO-emote5
	constant PYRO-EMOTES
	PYRO-EMOTES var pyro-emotes
	PYRO-EMOTES shuffles to pyro-emotes	
	
: pyro-oneliner
	pyro-oneliners depths 0= if PYRO-ONELINERS shuffles to pyro-oneliners then
	blurbslot 0= if
		drawcard blurbsay
	then
;

: pyro-emote
	pyro-emotes depths 0= if PYRO-EMOTES shuffles to pyro-emotes then
	blurbslot 0= if
		qmsg ($ me .name@ .. pyro-emotes drawcard $) txt
	then
;

	deck-new
	5 cards: pyro-emote
	6 cards: pyro-oneliner

	constant BLURB-PYRO-DECK
	BLURB-PYRO-DECK var blurb-pyro-deck
	BLURB-PYRO-DECK shuffles to blurb-pyro-deck
