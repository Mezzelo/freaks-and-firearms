	: DRIFTER-emote1 " polishes her sword." ;
	: DRIFTER-emote2 " cleans out her shotgun." ;
	: DRIFTER-emote3 " fiddles with her necklace." ;
	: DRIFTER-emote4 " pulls her scarf over her mouth." ;
	: DRIFTER-emote5 " bisects a passing zombie from on top of the car." ;
	: DRIFTER-emote6 " wraps herself up in her cloak." ;
	: DRIFTER-emote7 " watches the stars from the top of the car." ;

	deck-new
		card: DRIFTER-emote1
		card: DRIFTER-emote2
		card: DRIFTER-emote3
		card: DRIFTER-emote4
		card: DRIFTER-emote5
		card: DRIFTER-emote6
		card: DRIFTER-emote7
	constant DRIFTER-EMOTES
	DRIFTER-EMOTES var drifter-emotes
	DRIFTER-EMOTES shuffles to drifter-emotes	

: drifter-emote
	drifter-emotes depths 0= if DRIFTER-EMOTES shuffles to drifter-emotes then
	blurbslot 0= if
		qmsg ($ me .name@ .. drifter-emotes drawcard $) txt
	then
;

	deck-new
	5 cards: ...say
	7 cards: drifter-emote

	constant BLURB-DRIFTER-DECK
	BLURB-DRIFTER-DECK var blurb-drifter-deck
	BLURB-DRIFTER-DECK shuffles to blurb-drifter-deck
