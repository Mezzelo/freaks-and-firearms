	: MASKUN-oneline1 "Leeets mooove alreeaady!" ;
	: MASKUN-oneline2 "I wish I still had my seekers.." ;
	: MASKUN-oneline3 "Canada seems alriiight... huhuhu..." ;
	: MASKUN-oneline4 "Ngyeeess..." ;
	: MASKUN-oneline5 "At least smashing these zombies is okaay.." ;
	: MASKUN-oneline6 "Huuuhihi..." ;
	
: maskun-laugh
	blurbslot 0= if 
		($ "Huhuhu..." fbold $) blurbsay
	else
		blurbslot 2 < if
		2nd-char choosechar
			ctemper+ not if
				($ "Wow, that's totally not creepy." $) blurbsay
				STAT_MORALE 2nd-char .stat--
			then 
		then
	then
;

: maskun-complain
	blurbslot 0= if 
		($ "I haaaate having to use my roller..." fbold $) blurbsay
	else
		blurbslot 2 < if
		2nd-char choosechar
			cattitude+ not if
				($ "Too bad, nobody cares!" $) blurbsay
				STAT_MORALE 1st-char .stat--
			else
				($ "I'm sure it's a real bother." $) blurbsay
			then 
		then
	then
;

	deck-new
		card: MASKUN-oneline1
		card: MASKUN-oneline2
		card: MASKUN-oneline3
		card: MASKUN-oneline4
		card: MASKUN-oneline5
		card: MASKUN-oneline6
	constant MASKUN-ONELINERS
	MASKUN-ONELINERS var maskun-oneliners
	MASKUN-ONELINERS shuffles to maskun-oneliners

	: MASKUN-emote1 " wheezes softly through his mask." ;
	: MASKUN-emote2 " re-ties the band around his tentacles." ;
	: MASKUN-emote3 " changes out the filters on his mask" ;
	: MASKUN-emote4 " laughs softly to himself." ;
	: MASKUN-emote5 " stares out the window for a few hours." ;
	: MASKUN-emote6 " fiddles with the band on his arm." ;
	: MASKUN-emote7 " snoozes softly in the back." ;
	: MASKUN-emote8 " gargles something unintelligible through his mask." ;
	
	deck-new
		card: MASKUN-emote1
		card: MASKUN-emote2
		card: MASKUN-emote3
		card: MASKUN-emote4
		card: MASKUN-emote5
		card: MASKUN-emote6
		card: MASKUN-emote7
		card: MASKUN-emote8
	constant MASKUN-EMOTES
	MASKUN-EMOTES var maskun-emotes
	MASKUN-EMOTES shuffles to maskun-emotes	
	
: maskun-oneliner
	maskun-oneliners depths 0= if MASKUN-ONELINERS shuffles to maskun-oneliners then
	blurbslot 0= if
		drawcard blurbsay
	then
;

: maskun-emote
	maskun-emotes depths 0= if MASKUN-EMOTES shuffles to maskun-emotes then
	blurbslot 0= if
		qmsg ($ me .name@ .. maskun-emotes drawcard $) txt
	then
;

	deck-new
	8 cards: maskun-emote
	6 cards: maskun-oneliner
	card: maskun-laugh
	card: maskun-complain

	constant BLURB-MASKUN-DECK
	BLURB-MASKUN-DECK var blurb-maskun-deck
	BLURB-MASKUN-DECK shuffles to blurb-maskun-deck
